(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-590882ee"],{"0fa6":function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var i=r("e92d"),n=r("b2b2"),s=r("d17d"),o=r("8539");const a=i["a"].getLogger("esri.views.webgl.VertexArrayObject");class c{constructor(t,e,r,i,n=null){this._context=t,this._locations=e,this._layout=r,this._buffers=i,this._indexBuffer=n,this._glName=null,this._initialized=!1,t.instanceCounter.increment(s["t"].VAO,this)}get glName(){return this._glName}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get size(){return Object.keys(this._buffers).reduce((t,e)=>t+this._buffers[e].size,Object(n["j"])(this._indexBuffer)?this._indexBuffer.size:0)}get layout(){return this._layout}get locations(){return this._locations}dispose(t=!0){if(this._context){if(this._glName){var e,r;const t=null==(e=this._context)||null==(r=e.capabilities)?void 0:r.vao;t?(t.deleteVertexArray(this._glName),this._glName=null):a.warn("Leaked WebGL VAO")}if(this._context.getBoundVAO()===this&&this._context.bindVAO(null),t){for(const t in this._buffers)this._buffers[t].dispose(),delete this._buffers[t];this._indexBuffer=Object(n["e"])(this._indexBuffer)}this._context.instanceCounter.decrement(s["t"].VAO,this),this._context=null}else(this._glName||t&&Object.getOwnPropertyNames(this._buffers).length>0)&&a.warn("Leaked WebGL VAO")}initialize(){if(this._initialized)return;const t=this._context.capabilities.vao;if(t){const e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e}this._initialized=!0}bind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:r}=this;t||a.error("Vertex buffer dictionary is empty!");const i=this._context.gl;for(const n in t){const r=t[n];r||a.error("Vertex buffer is uninitialized!");const i=e[n];i||a.error("Vertex element descriptor is empty!"),Object(o["a"])(this._context,this._locations,r,i)}Object(n["j"])(r)&&(this._context.capabilities.vao?i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,r.glName):this._context.bindBuffer(r))}unbind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:t,_layout:e}=this;t||a.error("Vertex buffer dictionary is empty!");for(const r in t){const i=t[r];i||a.error("Vertex buffer is uninitialized!");const n=e[r];Object(o["e"])(this._context,this._locations,i,n)}Object(n["j"])(this._indexBuffer)&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}},"49f0":function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));class i{constructor(t){this.readFile=t}resolveIncludes(t){return this._resolve(t)}_resolve(t,e=new Map){if(e.has(t))return e.get(t);const r=this._read(t);if(!r)throw new Error("cannot find shader file "+t);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let n=i.exec(r);const s=[];for(;null!=n;)s.push({path:n[1],start:n.index,length:n[0].length}),n=i.exec(r);let o=0,a="";return s.forEach(t=>{a+=r.slice(o,t.start),a+=e.has(t.path)?"":this._resolve(t.path,e),o=t.start+t.length}),a+=r.slice(o),e.set(t,a),a}_read(t){return this.readFile(t)}}},"681f":function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var i=r("8e37");function n(t,e,r=""){return new i["a"](t,r+e.shaders.vertexShader,r+e.shaders.fragmentShader,e.attributes)}},"7ce4":function(t,e,r){"use strict";r.d(e,"a",(function(){return _}));var i=r("b50f"),n=r("e92d"),s=r("b2b2"),o=r("a21b"),a=r("1956"),c=r("cc15e"),h=r("d17d");const l=n["a"].getLogger("esri.views.webgl.BufferObject");function u(t){return Object(i["e"])(t)}class _{constructor(t,e,r,i){this._context=t,this.bufferType=e,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(h["t"].Buffer,this),this._glName=this._context.gl.createBuffer(),Object(a["a"])(this._context.gl),i&&this.setData(i)}static createIndex(t,e,r){return new _(t,h["d"].ELEMENT_ARRAY_BUFFER,e,r)}static createVertex(t,e,r){return new _(t,h["d"].ARRAY_BUFFER,e,r)}static createUniform(t,e,r){if(t.type!==c["a"].WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new _(t,h["d"].UNIFORM_BUFFER,e,r)}static createPixelPack(t,e=h["D"].STREAM_READ,r){if(t.type!==c["a"].WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const i=new _(t,h["d"].PIXEL_PACK_BUFFER,e);return r&&i.setSize(r),i}static createPixelUnpack(t,e=h["D"].STREAM_DRAW,r){if(t.type!==c["a"].WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new _(t,h["d"].PIXEL_UNPACK_BUFFER,e,r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return this.bufferType===h["d"].ELEMENT_ARRAY_BUFFER?this._indexType===h["k"].UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===h["d"].ELEMENT_ARRAY_BUFFER||this.bufferType===h["d"].ARRAY_BUFFER}dispose(){var t;null!=(t=this._context)&&t.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(h["t"].Buffer,this),this._context=null):this._glName&&l.warn("Leaked WebGL buffer object")}setSize(t,e=null){if(t<=0&&l.error("Buffer size needs to be positive!"),this.bufferType===h["d"].ELEMENT_ARRAY_BUFFER&&Object(s["j"])(e))switch(this._indexType=e,e){case h["k"].UNSIGNED_SHORT:t*=2;break;case h["k"].UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===h["d"].ELEMENT_ARRAY_BUFFER&&(Object(o["i"])(t)&&(e/=2,this._indexType=h["k"].UNSIGNED_SHORT),Object(o["j"])(t)&&(e/=4,this._indexType=h["k"].UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t,e=null){this._size=t;const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const i=this._context.gl;Object(s["j"])(e)?i.bufferData(this.bufferType,e,this.usage):i.bufferData(this.bufferType,t,this.usage),Object(a["a"])(i),this._isVAOAware&&this._context.bindVAO(r)}setSubData(t,e=0,r=0,i=t.byteLength){if(!t)return;(e<0||e>=this._size)&&l.error("offset is out of range!");let n=e,s=r,c=i,u=t.byteLength;this.bufferType===h["d"].ELEMENT_ARRAY_BUFFER&&(Object(o["i"])(t)?(u/=2,n*=2,s*=2,c*=2):Object(o["j"])(t)&&(u/=4,n*=4,s*=4,c*=4)),void 0===i&&(i=u-1),r>=i&&l.error("end must be bigger than start!"),e+r-i>this._size&&l.error("An attempt to write beyond the end of the buffer!");const _=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const f=this._context.gl,d=ArrayBuffer.isView(t)?t.buffer:t,m=0===s&&c===t.byteLength?d:d.slice(s,c);f.bufferSubData(this.bufferType,n,m),Object(a["a"])(f),this._isVAOAware&&this._context.bindVAO(_)}setSubDataFromView(t,e,r,i){if(!t)return;(e<0||e>=this._size)&&l.error("offset is out of range!"),r>=i&&l.error("end must be bigger than start!"),e+r-i>this._size&&l.error("An attempt to write beyond the end of the buffer!");const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;if(this._context.type===c["a"].WEBGL2)s.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,r,i-r);else{const n=0===r&&i===t.length?t:t.subarray(r,i);s.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,n)}Object(a["a"])(s),this._isVAOAware&&this._context.bindVAO(n)}getSubData(t,e=0,r,i){if(this._context.type!==c["a"].WEBGL2)return void l.error("Get buffer subdata is supported in WebGL2 only!");if(r<0||i<0)return void l.error("Problem getting subdata: offset and length were less than zero!");const n=u(t)?t.BYTES_PER_ELEMENT:1;if(n*((null!=r?r:0)+(null!=i?i:0))>t.byteLength)return void l.error("Problem getting subdata: offset and length exceeded destination size!");e+n*(null!=i?i:0)>this.byteSize&&l.warn("Potential problem getting subdata: requested data exceeds buffer size!");const s=this._context.gl;this._context.bindBuffer(this,h["d"].COPY_READ_BUFFER),s.getBufferSubData(h["d"].COPY_READ_BUFFER,e,t,r,i),this._context.unbindBuffer(h["d"].COPY_READ_BUFFER)}async getSubDataAsync(t,e=0,r,i){this._context.type===c["a"].WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(t,e,r,i)):l.error("Get buffer subdata is supported in WebGL2 only!")}}},8539:function(t,e,r){"use strict";r.d(e,"a",(function(){return c})),r.d(e,"b",(function(){return l})),r.d(e,"c",(function(){return s})),r.d(e,"d",(function(){return u})),r.d(e,"e",(function(){return h})),r.d(e,"f",(function(){return o}));r("c120");var i=r("b2b2"),n=r("d17d");function s(t){const e=t.gl;switch(e.getError()){case e.NO_ERROR:return null;case e.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case e.INVALID_VALUE:return"A numeric argument is out of range";case e.INVALID_OPERATION:return"The specified command is not allowed for the current state";case e.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case e.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case e.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function o(t,e){return t.vertexBuffers[e].size/a(t.layout[e])}function a(t){return t[0].stride}function c(t,e,r,i,n=0){const s=t.gl,o=t.capabilities.instancing;t.bindBuffer(r);for(const a of i){const t=e.get(a.name);void 0===t&&console.error(`There is no location for vertex attribute '${a.name}' defined.`);const r=n*a.stride;if(a.count<=4)s.vertexAttribPointer(t,a.count,a.type,a.normalized,a.stride,a.offset+r),s.enableVertexAttribArray(t),a.divisor>0&&o&&o.vertexAttribDivisor(t,a.divisor);else if(9===a.count)for(let e=0;e<3;e++)s.vertexAttribPointer(t+e,3,a.type,a.normalized,a.stride,a.offset+12*e+r),s.enableVertexAttribArray(t+e),a.divisor>0&&o&&o.vertexAttribDivisor(t+e,a.divisor);else if(16===a.count)for(let e=0;e<4;e++)s.vertexAttribPointer(t+e,4,a.type,a.normalized,a.stride,a.offset+16*e+r),s.enableVertexAttribArray(t+e),a.divisor>0&&o&&o.vertexAttribDivisor(t+e,a.divisor);else console.error("Unsupported vertex attribute element count: "+a.count)}}function h(t,e,r,i){const s=t.gl,o=t.capabilities.instancing;t.bindBuffer(r);for(const n of i){const t=e.get(n.name);if(n.count<=4)s.disableVertexAttribArray(t),n.divisor&&n.divisor>0&&o&&o.vertexAttribDivisor(t,0);else if(9===n.count)for(let e=0;e<3;e++)s.disableVertexAttribArray(t+e),n.divisor&&n.divisor>0&&o&&o.vertexAttribDivisor(t+e,0);else if(16===n.count)for(let e=0;e<4;e++)s.disableVertexAttribArray(t+e),n.divisor&&n.divisor>0&&o&&o.vertexAttribDivisor(t+e,0);else console.error("Unsupported vertex attribute element count: "+n.count)}t.unbindBuffer(n["d"].ARRAY_BUFFER)}function l(t){switch(t){case n["p"].ALPHA:case n["p"].LUMINANCE:case n["p"].RED:case n["p"].RED_INTEGER:case n["v"].R8:case n["v"].R8I:case n["v"].R8UI:case n["v"].R8_SNORM:case n["s"].STENCIL_INDEX8:return 1;case n["p"].LUMINANCE_ALPHA:case n["p"].RG:case n["p"].RG_INTEGER:case n["v"].RGBA4:case n["v"].R16F:case n["v"].R16I:case n["v"].R16UI:case n["v"].RG8:case n["v"].RG8I:case n["v"].RG8UI:case n["v"].RG8_SNORM:case n["v"].RGB565:case n["v"].RGB5_A1:case n["s"].DEPTH_COMPONENT16:return 2;case n["p"].DEPTH_COMPONENT:case n["p"].RGB:case n["p"].RGB_INTEGER:case n["v"].RGB8:case n["v"].RGB8I:case n["v"].RGB8UI:case n["v"].RGB8_SNORM:case n["v"].SRGB8:case n["s"].DEPTH_COMPONENT24:return 3;case n["p"].DEPTH_STENCIL:case n["p"].RGBA:case n["p"].RGBA_INTEGER:case n["v"].RGBA8:case n["v"].R32F:case n["v"].R11F_G11F_B10F:case n["v"].RG16F:case n["v"].R32I:case n["v"].R32UI:case n["v"].RG16I:case n["v"].RG16UI:case n["v"].RGBA8I:case n["v"].RGBA8UI:case n["v"].RGBA8_SNORM:case n["v"].SRGB8_ALPHA8:case n["v"].RGB9_E5:case n["v"].RGB10_A2UI:case n["v"].RGB10_A2:case n["s"].DEPTH_STENCIL:case n["s"].DEPTH_COMPONENT32F:case n["s"].DEPTH24_STENCIL8:return 4;case n["s"].DEPTH32F_STENCIL8:return 5;case n["v"].RGB16F:case n["v"].RGB16I:case n["v"].RGB16UI:return 6;case n["v"].RG32F:case n["v"].RG32I:case n["v"].RG32UI:case n["v"].RGBA16F:case n["v"].RGBA16I:case n["v"].RGBA16UI:return 8;case n["v"].RGB32F:case n["v"].RGB32I:case n["v"].RGB32UI:return 12;case n["v"].RGBA32F:case n["v"].RGBA32I:case n["v"].RGBA32UI:return 16;case n["i"].COMPRESSED_RGB_S3TC_DXT1_EXT:case n["i"].COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case n["i"].COMPRESSED_RGBA_S3TC_DXT3_EXT:case n["i"].COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case n["i"].COMPRESSED_R11_EAC:case n["i"].COMPRESSED_SIGNED_R11_EAC:case n["i"].COMPRESSED_RGB8_ETC2:case n["i"].COMPRESSED_SRGB8_ETC2:case n["i"].COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case n["i"].COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case n["i"].COMPRESSED_RG11_EAC:case n["i"].COMPRESSED_SIGNED_RG11_EAC:case n["i"].COMPRESSED_RGBA8_ETC2_EAC:case n["i"].COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}function u(t){if(Object(i["i"])(t))return 0;if("descriptor"in t)return t.glName?u(t.descriptor):0;const e=t.internalFormat||"pixelFormat"in t&&t.pixelFormat;if(!e)return 0;const r="hasMipmap"in t&&t.hasMipmap?1.3:1,n=t.width*t.height;return l(e)*n*r}},"8e37":function(t,e,r){"use strict";r.d(e,"a",(function(){return h}));r("c120");var i=r("b2b2"),n=r("1956"),s=r("cc15e"),o=r("d17d"),a=r("d1bc");const c=4294967295;class h{constructor(t,e,r,i,c=new Map){this._context=t,this._locations=i,this._uniformBlockBindings=c,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v={},this._nameToUniform2={},this._nameToUniform3={},this._nameToUniform4={},this._nameToUniformMatrix3={},this._nameToUniformMatrix4={},t||console.error("RenderingContext isn't initialized!"),0===e.length&&console.error("Shaders source should not be empty!"),this._context.type===s["a"].WEBGL2&&(e=Object(a["a"])(e,o["u"].VERTEX_SHADER),r=Object(a["a"])(r,o["u"].FRAGMENT_SHADER)),this._vShader=u(this._context,o["u"].VERTEX_SHADER,e),this._fShader=u(this._context,o["u"].FRAGMENT_SHADER,r),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(o["t"].Shader,this),Object(n["c"])()&&(this.vertexShader=e,this.fragmentShader=r)}get glName(){if(Object(i["j"])(this._glName))return this._glName;if(Object(i["i"])(this._vShader))return null;const t=this._context.gl,e=t.createProgram();if(t.attachShader(e,this._vShader),t.attachShader(e,this._fShader),this._locations.forEach((r,i)=>t.bindAttribLocation(e,r,i)),t.linkProgram(e),Object(n["c"])()&&!t.getProgramParameter(e,t.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${t.getProgramParameter(e,t.VALIDATE_STATUS)}, gl error ${t.getError()}, vertex: ${t.getShaderParameter(this._vShader,t.COMPILE_STATUS)}, fragment: ${t.getShaderParameter(this._fShader,t.COMPILE_STATUS)}, info log: ${t.getProgramInfoLog(e)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`),this._context.type===s["a"].WEBGL2){const r=t;for(const[t,i]of this._uniformBlockBindings){const n=r.getUniformBlockIndex(e,t);n<c&&r.uniformBlockBinding(e,n,i)}}return this._glName=e,this._context.instanceCounter.increment(o["t"].Program,this),e}get hasGLName(){return Object(i["j"])(this._glName)}get isCompiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==t?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl;this._vShader&&(t.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(o["t"].Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(o["t"].Program,this))}ref(){++this._refCount}_getUniformLocation(t){return void 0===this._nameToUniformLocation[t]&&(this._nameToUniformLocation[t]=this._context.gl.getUniformLocation(this.glName,t)),this._nameToUniformLocation[t]}hasUniform(t){return null!==this._getUniformLocation(t)}setUniform1i(t,e){const r=this._nameToUniform1[t];void 0!==r&&e===r||(this._context.gl.uniform1i(this._getUniformLocation(t),e),this._nameToUniform1[t]=e)}setUniform1iv(t,e){const r=this._nameToUniform1v[t];l(r,e)&&(this._context.gl.uniform1iv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform1v[t]=Array.from(e):d(e,r))}setUniform2iv(t,e){const r=this._nameToUniform2[t];l(r,e)&&(this._context.gl.uniform2iv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform2[t]=Array.from(e):d(e,r))}setUniform3iv(t,e){const r=this._nameToUniform3[t];l(r,e)&&(this._context.gl.uniform3iv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform3[t]=Array.from(e):d(e,r))}setUniform4iv(t,e){const r=this._nameToUniform4[t];l(r,e)&&(this._context.gl.uniform4iv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform4[t]=Array.from(e):d(e,r))}setUniform1f(t,e){const r=this._nameToUniform1[t];void 0!==r&&e===r||(this._context.gl.uniform1f(this._getUniformLocation(t),e),this._nameToUniform1[t]=e)}setUniform1fv(t,e){const r=this._nameToUniform1v[t];l(r,e)&&(this._context.gl.uniform1fv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform1v[t]=Array.from(e):d(e,r))}setUniform2f(t,e,r){const i=this._nameToUniform2[t];void 0!==i&&e===i[0]&&r===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),e,r),void 0===i?this._nameToUniform2[t]=[e,r]:(i[0]=e,i[1]=r))}setUniform2fv(t,e){const r=this._nameToUniform2[t];l(r,e)&&(this._context.gl.uniform2fv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform2[t]=Array.from(e):d(e,r))}setUniform3f(t,e,r,i){const n=this._nameToUniform3[t];void 0!==n&&e===n[0]&&r===n[1]&&i===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),e,r,i),void 0===n?this._nameToUniform3[t]=[e,r,i]:(n[0]=e,n[1]=r,n[2]=i))}setUniform3fv(t,e){const r=this._nameToUniform3[t];l(r,e)&&(this._context.gl.uniform3fv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform3[t]=Array.from(e):d(e,r))}setUniform4f(t,e,r,i,n){const s=this._nameToUniform4[t];void 0!==s&&e===s[0]&&r===s[1]&&i===s[2]&&n===s[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),e,r,i,n),void 0===s?this._nameToUniform4[t]=[e,r,i,n]:(s[0]=e,s[1]=r,s[2]=i,s[3]=n))}setUniform4fv(t,e){const r=this._nameToUniform4[t];l(r,e)&&(this._context.gl.uniform4fv(this._getUniformLocation(t),e),void 0===r?this._nameToUniform4[t]=Array.from(e):d(e,r))}setUniformMatrix3fv(t,e,r=!1){const i=this._nameToUniformMatrix3[t];m(i,e)&&(this._context.gl.uniformMatrix3fv(this._getUniformLocation(t),r,e),void 0===i?this._nameToUniformMatrix3[t]=Array.from(e):d(e,i))}setUniformMatrix4fv(t,e,r=!1){const i=this._nameToUniformMatrix4[t];g(i,e)&&(this._context.gl.uniformMatrix4fv(this._getUniformLocation(t),r,e),void 0===i?this._nameToUniformMatrix4[t]=Array.from(e):d(e,i))}stop(){}}function l(t,e){if(Object(i["i"])(t)||t.length!==e.length)return!0;for(let r=0;r<t.length;++r)if(t[r]!==e[r])return!0;return!1}function u(t,e,r){const i=t.gl,a=i.createShader(e);return i.shaderSource(a,r),i.compileShader(a),Object(n["c"])()&&!i.getShaderParameter(a,i.COMPILE_STATUS)&&(console.error("Compile error in ".concat(e===o["u"].VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(i.getShaderInfoLog(a)),console.error(_(r)),t.type===s["a"].WEBGL2&&(console.log("Shader source before transpilation:"),console.log(r))),a}function _(t){let e=2;return t.replace(/\n/g,()=>"\n"+f(e++)+":")}function f(t){return t>=1e3?t.toString():("  "+t).slice(-3)}function d(t,e){for(let r=0;r<t.length;++r)e[r]=t[r]}function m(t,e){return!!Object(i["i"])(t)||(9!==t.length?l(t,e):9!==t.length||t[0]!==e[0]||t[1]!==e[1]||t[2]!==e[2]||t[3]!==e[3]||t[4]!==e[4]||t[5]!==e[5]||t[6]!==e[6]||t[7]!==e[7]||t[8]!==e[8])}function g(t,e){return!!Object(i["i"])(t)||(16!==t.length?l(t,e):16!==t.length||t[0]!==e[0]||t[1]!==e[1]||t[2]!==e[2]||t[3]!==e[3]||t[4]!==e[4]||t[5]!==e[5]||t[6]!==e[6]||t[7]!==e[7]||t[8]!==e[8]||t[9]!==e[9]||t[10]!==e[10]||t[11]!==e[11]||t[12]!==e[12]||t[13]!==e[13]||t[14]!==e[14]||t[15]!==e[15])}},"91b0":function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var i=r("cc15e"),n=r("d17d");class s{constructor(t,e){this._context=t,this._desc=e,this.type="renderbuffer",this._context.instanceCounter.increment(n["t"].Renderbuffer,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:o,internalFormat:a,multisampled:c}=e;if(c){if(this._context.type!==i["a"].WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,a,s,o)}else r.renderbufferStorage(r.RENDERBUFFER,a,s,o)}get descriptor(){return this._desc}get samples(){const t=this._desc.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}resize(t,e){const r=this._desc;if(r.width===t&&r.height===e)return;r.width=t,r.height=e;const i=this._context.gl;this._context.bindRenderbuffer(this),r.multisampled?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,r.internalFormat,r.width,r.height):i.renderbufferStorage(i.RENDERBUFFER,r.internalFormat,r.width,r.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(n["t"].Renderbuffer,this),this._context=null)}}},d1bc:function(t,e,r){"use strict";r.d(e,"a",(function(){return j}));r("c120");var i=r("b2b2"),n=r("d17d");const s=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"];var o,a={exports:{}};void 0!==(o=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(a.exports=o);const c=a.exports;var h,l={exports:{}};h=l,function(t){var e=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==e&&(h.exports=e)}();const u=l.exports;var _={exports:{}};!function(t){!function(e){var r=function(){return["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"]}();void 0!==r&&(t.exports=r)}()}(_);const f=_.exports;var d=999,m=9999,g=0,E=1,p=2,T=3,x=4,b=5,A=6,R=7,S=8,D=9,v=10,N=11,F=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function U(){var t,e,r,i=0,n=0,s=d,o=[],a=[],h=1,l=0,_=0,U=!1,C=!1,y="";return function(t){return a=[],null!==t?M(t.replace?t.replace(/\r\n/g,"\n"):t):P()};function B(t){t.length&&a.push({type:F[s],data:t,position:_,line:h,column:l})}function M(e){var o;for(i=0,r=(y+=e).length;t=y[i],i<r;){switch(o=i,s){case g:i=G();break;case E:i=I();break;case p:i=w();break;case T:i=H();break;case x:i=z();break;case N:i=V();break;case b:i=k();break;case m:i=X();break;case D:i=L();break;case d:i=O()}o!==i&&("\n"===y[o]?(l=0,++h):++l)}return n+=i,y=y.slice(i),a}function P(t){return o.length&&B(o.join("")),s=v,B("(eof)"),a}function O(){return o=o.length?[]:o,"/"===e&&"*"===t?(_=n+i-1,s=g,e=t,i+1):"/"===e&&"/"===t?(_=n+i-1,s=E,e=t,i+1):"#"===t?(s=p,_=n+i,i):/\s/.test(t)?(s=D,_=n+i,i):(U=/\d/.test(t),C=/[^\w_]/.test(t),_=n+i,s=U?x:C?T:m,i)}function L(){return/[^\s]/g.test(t)?(B(o.join("")),s=d,i):(o.push(t),e=t,i+1)}function w(){return"\r"!==t&&"\n"!==t||"\\"===e?(o.push(t),e=t,i+1):(B(o.join("")),s=d,i)}function I(){return w()}function G(){return"/"===t&&"*"===e?(o.push(t),B(o.join("")),s=d,i+1):(o.push(t),e=t,i+1)}function H(){if("."===e&&/\d/.test(t))return s=b,i;if("/"===e&&"*"===t)return s=g,i;if("/"===e&&"/"===t)return s=E,i;if("."===t&&o.length){for(;j(o););return s=b,i}if(";"===t||")"===t||"("===t){if(o.length)for(;j(o););return B(t),s=d,i+1}var r=2===o.length&&"="!==t;if(/[\w_\d\s]/.test(t)||r){for(;j(o););return s=d,i}return o.push(t),e=t,i+1}function j(t){for(var e,r,i=0;;){if(e=u.indexOf(t.slice(0,t.length+i).join("")),r=u[e],-1===e){if(i--+t.length>0)continue;r=t.slice(0,1).join("")}return B(r),_+=r.length,(o=o.slice(r.length)).length}}function V(){return/[^a-fA-F0-9]/.test(t)?(B(o.join("")),s=d,i):(o.push(t),e=t,i+1)}function z(){return"."===t||/[eE]/.test(t)?(o.push(t),s=b,e=t,i+1):"x"===t&&1===o.length&&"0"===o[0]?(s=N,o.push(t),e=t,i+1):/[^\d]/.test(t)?(B(o.join("")),s=d,i):(o.push(t),e=t,i+1)}function k(){return"f"===t&&(o.push(t),e=t,i+=1),/[eE]/.test(t)||"-"===t&&/[eE]/.test(e)?(o.push(t),e=t,i+1):/[^\d]/.test(t)?(B(o.join("")),s=d,i):(o.push(t),e=t,i+1)}function X(){if(/[^\d\w_]/.test(t)){var r=o.join("");return s=c.indexOf(r)>-1?S:f.indexOf(r)>-1?R:A,B(o.join("")),s=d,i}return o.push(t),e=t,i+1}}function C(t){var e=U(),r=[];return(r=r.concat(e(t))).concat(e(null))}function y(t){return C(t)}function B(t){return t.map(t=>"eof"!==t.type?t.data:"").join("")}const M=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function P(t,e="100",r="300 es"){const i=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of t)if("preprocessor"===n.type){const t=i.exec(n.data);if(t){const i=t[1].replace(/\s\s+/g," ");if(i===r)return i;if(i===e)return n.data="#version "+r,e;throw new Error("unknown glsl version: "+i)}}return t.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:"\n"}),null}function O(t,e){for(let r=e-1;r>=0;r--){const e=t[r];if("whitespace"!==e.type&&"block-comment"!==e.type){if("keyword"!==e.type)break;if("attribute"===e.data||"in"===e.data)return!0}}return!1}function L(t,e,r,i){i=i||r;for(const n of t)if("ident"===n.type&&n.data===r)return i in e?e[i]++:e[i]=0,L(t,e,i+"_"+e[i],i);return r}function w(t,e,r="afterVersion"){function i(t,e){for(let r=e;r<t.length;r++){const e=t[r];if("operator"===e.type&&";"===e.data)return r}return null}function n(t){let e=-1,n=0,s=-1;for(let o=0;o<t.length;o++){const a=t[o];if("preprocessor"===a.type&&(a.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++n:a.data.match(/\#endif\s*.*/)&&--n),"afterVersion"!==r&&"afterPrecision"!==r||"preprocessor"===a.type&&/^#version/.test(a.data)&&(s=Math.max(s,o)),"afterPrecision"===r&&"keyword"===a.type&&"precision"===a.data){const e=i(t,o);if(null===e)throw new Error("precision statement not followed by any semicolons!");s=Math.max(s,e)}e<s&&0===n&&(e=o)}return e+1}const s={data:"\n",type:"whitespace"},o=e=>e<t.length&&/[^\r\n]$/.test(t[e].data);let a=n(t);o(a-1)&&t.splice(a++,0,s);for(const c of e)t.splice(a++,0,c);o(a-1)&&o(a)&&t.splice(a,0,s)}function I(t,e,r,i="lowp"){w(t,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function G(t,e,r,i,n="lowp"){w(t,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function H(t,e){let r,i,n=-1;for(let s=e;s<t.length;s++){const e=t[s];if("operator"===e.type&&("["===e.data&&(r=s),"]"===e.data)){i=s;break}"integer"===e.type&&(n=parseInt(e.data,10))}return r&&i&&t.splice(r,i-r+1),n}function j(t,e){const r=k(t);if(Object(i["j"])(r))return r;const o=y(t);if("300 es"===P(o,"100","300 es"))return t;let a=null,c=null;const h={},l={};for(let i=0;i<o.length;++i){const t=o[i];switch(t.type){case"keyword":e===n["u"].VERTEX_SHADER&&"attribute"===t.data?t.data="in":"varying"===t.data&&(t.data=e===n["u"].VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(t.data.trim())&&(t.data=t.data.replace(/(2D|Cube|EXT)/g,"")),e===n["u"].FRAGMENT_SHADER&&"gl_FragColor"===t.data&&(a||(a=L(o,h,"fragColor"),I(o,a,"vec4")),t.data=a),e===n["u"].FRAGMENT_SHADER&&"gl_FragData"===t.data){const e=H(o,i+1),r=L(o,h,"fragData");G(o,r,"vec4",e,"mediump"),t.data=r}else e===n["u"].FRAGMENT_SHADER&&"gl_FragDepthEXT"===t.data&&(c||(c=L(o,h,"gl_FragDepth")),t.data=c);break;case"ident":if(s.indexOf(t.data)>=0){if(e===n["u"].VERTEX_SHADER&&O(o,i))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");t.data in l||(l[t.data]=L(o,h,t.data)),t.data=l[t.data]}}}for(let i=o.length-1;i>=0;--i){const t=o[i];if("preprocessor"===t.type){const e=t.data.match(/\#extension\s+(.*)\:/);if(e&&e[1]&&M.indexOf(e[1].trim())>=0){const t=o[i+1];o.splice(i,t&&"whitespace"===t.type?2:1)}const r=t.data.match(/\#ifdef\s+(.*)/);r&&r[1]&&M.indexOf(r[1].trim())>=0&&(t.data="#if 1");const n=t.data.match(/\#ifndef\s+(.*)/);n&&n[1]&&M.indexOf(n[1].trim())>=0&&(t.data="#if 0")}}return X(t,B(o))}const V={enableCache:!1},z=new Map;function k(t){return V.enableCache?z.get(t):null}function X(t,e){return V.enableCache&&z.set(t,e),e}},d267:function(t,e,r){"use strict";r.d(e,"a",(function(){return f}));var i=r("e92d"),n=r("b2b2"),s=r("7ce4"),o=r("1956"),a=r("cc15e"),c=r("d17d"),h=r("91b0"),l=r("a1ff"),u=r("8539");const _=i["a"].getLogger("esri.views.webgl.FrameBufferObject");class f{constructor(t,e,r=null,i=null){if(this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc={...e},t.instanceCounter.increment(c["t"].Framebuffer,this),Object(n["j"])(r)){Array.isArray(r)||(r=[r]);for(let t=0;t<r.length;++t){const e=r[t],i=c["g"].COLOR_ATTACHMENT0+t;let n;g(e)?(d(e)?(n=e.descriptor,this._colorAttachments.set(i,e)):(n=e,this._colorAttachments.set(i,new l["a"](this._context,n))),p(n,this._desc)):(m(e)?(n=e.descriptor,this._colorAttachments.set(i,e)):(n=e,this._colorAttachments.set(i,new h["a"](this._context,n))),T(n,this._desc)),this._validateColorAttachmentPoint(i)}}if(Object(n["j"])(i)){let t,e;if(g(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),d(i)?(e=i.descriptor,this._depthStencilTexture=i):(e=i,this._depthStencilTexture=new l["a"](this._context,e)),p(e,this._desc);else{var s;m(i)?(e=i.descriptor,t=i):(e=i,t=new h["a"](this._context,e));const r=null!=(s=this._desc.depthStencilTarget)?s:c["m"].DEPTH_STENCIL_RENDER_BUFFER;r===c["m"].STENCIL_RENDER_BUFFER?this._stencilAttachment=t:r===c["m"].DEPTH_RENDER_BUFFER||r===c["m"].DEPTH_STENCIL_RENDER_BUFFER?this._depthAttachment=t:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),T(e,this._desc)}}}dispose(){if(!this._desc)return;const t=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(c["t"].Framebuffer,this),this._desc=null}get glName(){return this._glName}get descriptor(){return this._desc}get colorTexture(){const t=this._colorAttachments.get(c["g"].COLOR_ATTACHMENT0);return t&&d(t)?t:null}get colorAttachment(){return this._colorAttachments.get(c["g"].COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._desc.width}get height(){return this._desc.height}get gpuMemoryUsage(){return[...this._colorAttachments].reduce((t,[e,r])=>t+Object(u["d"])(r),0)+Object(u["d"])(this.depthStencilAttachment)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&d(e)?e:null}attachColorTexture(t,e=c["g"].COLOR_ATTACHMENT0){t&&(this._validateColorAttachmentPoint(e),p(t.descriptor,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t))}detachColorTexture(t=c["g"].COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(d(e)){const r=e;return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)),this._colorAttachments.delete(t),r}}setColorTextureTarget(t,e=c["g"].COLOR_ATTACHMENT0){const r=this._colorAttachments.get(e);d(r)&&this._framebufferTexture2D(r.glName,e,t)}attachDepthStencilTexture(t){if(Object(n["i"])(t))return;const e=t.descriptor;e.pixelFormat!==c["p"].DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==c["q"].UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),p(e,this._desc),this._desc.depthStencilTarget&&this._desc.depthStencilTarget!==c["m"].DEPTH_STENCIL_TEXTURE&&(this._desc.depthStencilTarget=c["m"].DEPTH_STENCIL_TEXTURE),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,c["l"])),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,c["l"])),this._depthStencilTexture=null,t}attachDepthStencilBuffer(t){if(Object(n["i"])(t))return;const e=t.descriptor;if(e.internalFormat!==c["s"].DEPTH_STENCIL&&e.internalFormat!==c["s"].DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),T(e,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=e.internalFormat===c["s"].DEPTH_STENCIL?c["m"].DEPTH_STENCIL_RENDER_BUFFER:c["m"].DEPTH_RENDER_BUFFER,this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,r=this._desc.depthStencilTarget===c["m"].DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(c["o"].FRAMEBUFFER,r,e.RENDERBUFFER,t.glName)}this._depthAttachment=t}detachDepthStencilBuffer(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===c["m"].DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(c["o"].FRAMEBUFFER,e,t.RENDERBUFFER,null)}return this._depthAttachment=null,e}detachAll(){this._colorAttachments.forEach((t,e)=>this._detachColorAttachment(e)),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()}copyToTexture(t,e,r,i,n,s,o){(t<0||e<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const a=this._desc,h=o.descriptor;o.descriptor.target!==c["A"].TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(t+r>a.width||e+i>a.height||n+r>h.width||s+i>h.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const u=this._context,_=u.bindTexture(o,l["a"].TEXTURE_UNIT_FOR_UPDATES);u.setActiveTexture(l["a"].TEXTURE_UNIT_FOR_UPDATES),u.bindFramebuffer(this),u.gl.copyTexSubImage2D(c["A"].TEXTURE_2D,0,n,s,t,e,r,i),u.bindTexture(_,l["a"].TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,r,i,n,s,o){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),o||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,r,i,n,s,o)}async readPixelsAsync(t,e,r,i,n,h,l){if(this._context.type!==a["a"].WEBGL2)return Object(o["b"])()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(t,e,r,i,n,h,l);const u=this._context.gl,_=s["a"].createPixelPack(this._context,c["D"].STREAM_READ,l.byteLength);this._context.bindBuffer(_),this._context.bindFramebuffer(this),u.readPixels(t,e,r,i,n,h,0),this._context.unbindBuffer(c["d"].PIXEL_PACK_BUFFER),await _.getSubDataAsync(l),_.dispose()}resize(t,e){const r=this._desc;if(r.width!==t||r.height!==e){if(!this._initialized)return r.width=t,r.height=e,this._colorAttachments.forEach(r=>{r&&r.resize(t,e)}),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));r.width=t,r.height=e,this._colorAttachments.forEach(r=>{r&&r.resize(t,e)}),null!=this._depthStencilTexture?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}initializeAndBind(t=c["o"].FRAMEBUFFER){var e,r,i,n;const s=this._context.gl;if(this._initialized)return void s.bindFramebuffer(t,this.glName);this._glName&&s.deleteFramebuffer(this._glName);const a=this._context,u=s.createFramebuffer(),_=this._desc,f=null!=(e=_.colorTarget)?e:c["y"].RENDER_BUFFER,m=null!=(r=_.width)?r:1,g=null!=(i=_.height)?i:1;if(s.bindFramebuffer(t,u),0===this._colorAttachments.size)if(f===c["y"].TEXTURE||f===c["y"].CUBEMAP)this._colorAttachments.set(c["g"].COLOR_ATTACHMENT0,E(a,_,this.descriptor.colorTarget===c["y"].CUBEMAP?c["A"].TEXTURE_CUBE_MAP:c["A"].TEXTURE_2D));else{const t=new h["a"](a,{internalFormat:c["v"].RGBA4,width:m,height:g});this._colorAttachments.set(c["g"].COLOR_ATTACHMENT0,t)}this._colorAttachments.forEach((e,r)=>{e&&(d(e)?this._framebufferTexture2D(e.glName,r,x(e),t):s.framebufferRenderbuffer(t,r,s.RENDERBUFFER,e.glName))});const p=null!=(n=_.depthStencilTarget)?n:c["m"].NONE;switch(p){case c["m"].DEPTH_RENDER_BUFFER:case c["m"].DEPTH_STENCIL_RENDER_BUFFER:{this._depthAttachment||(this._depthAttachment=new h["a"](a,{internalFormat:_.depthStencilTarget===c["m"].DEPTH_RENDER_BUFFER?c["s"].DEPTH_COMPONENT16:c["s"].DEPTH_STENCIL,width:m,height:g}));const e=p===c["m"].DEPTH_RENDER_BUFFER?s.DEPTH_ATTACHMENT:s.DEPTH_STENCIL_ATTACHMENT;s.framebufferRenderbuffer(t,e,s.RENDERBUFFER,this._depthAttachment.glName);break}case c["m"].STENCIL_RENDER_BUFFER:this._stencilAttachment||(this._stencilAttachment=new h["a"](a,{internalFormat:c["s"].STENCIL_INDEX8,width:m,height:g})),s.framebufferRenderbuffer(t,s.STENCIL_ATTACHMENT,s.RENDERBUFFER,this._stencilAttachment.glName);break;case c["m"].DEPTH_STENCIL_TEXTURE:if(!this._depthStencilTexture){a.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const t={target:c["A"].TEXTURE_2D,pixelFormat:c["p"].DEPTH_STENCIL,dataType:c["q"].UNSIGNED_INT_24_8,samplingMode:c["z"].NEAREST,wrapMode:c["B"].CLAMP_TO_EDGE,width:m,height:g};this._depthStencilTexture=new l["a"](a,t)}this._framebufferTexture2D(this._depthStencilTexture.glName,s.DEPTH_STENCIL_ATTACHMENT,x(this._depthStencilTexture),t)}Object(o["c"])()&&s.checkFramebufferStatus(t)!==s.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=u,this._initialized=!0}_framebufferTexture2D(t,e=c["g"].COLOR_ATTACHMENT0,r=c["A"].TEXTURE_2D,i=c["o"].FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(i,e,r,t,n)}_detachColorAttachment(t){Object(o["b"])()&&console.warn("Detaching an FBO attachment can be a slow due to invalidating framebuffer completeness!");const e=this._context.gl,r=this._colorAttachments.get(t);return d(r)?this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)):this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(c["o"].FRAMEBUFFER,t,e.RENDERBUFFER,null)),this._colorAttachments.delete(t),r}_disposeColorAttachments(){this._colorAttachments.forEach((t,e)=>{this._detachColorAttachment(e),t.dispose()}),this._colorAttachments.clear()}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===c["m"].DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(c["o"].FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(c["o"].FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}_validateColorAttachmentPoint(t){if(-1===f._MAX_COLOR_ATTACHMENTS){const t=this._context.capabilities.drawBuffers;if(t){const e=this._context.gl;f._MAX_COLOR_ATTACHMENTS=e.getParameter(t.MAX_COLOR_ATTACHMENTS)}else f._MAX_COLOR_ATTACHMENTS=1}const e=t-c["g"].COLOR_ATTACHMENT0;e+1>f._MAX_COLOR_ATTACHMENTS&&_.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${f._MAX_COLOR_ATTACHMENTS} color attachments`)}}function d(t){return"type"in t&&"texture"===t.type}function m(t){return"type"in t&&"renderbuffer"===t.type}function g(t){return d(t)||"pixelFormat"in t}function E(t,e,r){return new l["a"](t,{target:r,pixelFormat:c["p"].RGBA,dataType:c["q"].UNSIGNED_BYTE,samplingMode:c["z"].NEAREST,wrapMode:c["B"].CLAMP_TO_EDGE,width:e.width,height:e.height})}function p(t,e){t.target!==c["A"].TEXTURE_2D&&t.target!==c["A"].TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Color attachment texture must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function T(t,e){void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function x(t){return t.descriptor.target===c["A"].TEXTURE_CUBE_MAP?c["A"].TEXTURE_CUBE_MAP_POSITIVE_X:c["A"].TEXTURE_2D}f._MAX_COLOR_ATTACHMENTS=-1}}]);